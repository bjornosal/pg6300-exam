{"version":3,"sources":["questionMark.png","listIcon.svg","containers/game/Game.js","containers/home/Home.js","actions/Game.js","actionTypes.js","containers/leaderboard/Leaderboard.js","components/inputField/InputField.js","actions/SignUp.js","forms/SignUpForm.js","containers/signUp/SignUp.js","actions/Login.js","forms/LoginForm.js","containers/login/Login.js","components/quizMakerInputField/QuizMakerInputField.js","containers/quizMaker/QuizMaker.js","containers/routes/Routes.js","containers/header/Header.js","App.js","serviceWorker.js","reducers/Login.js","reducers/SignUp.js","reducers/Game.js","reducers/RootReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","currentRoom","Home","react_default","a","createElement","className","src","questionmark","alt","Link","to","undefined","this","props","loggedIn","listIcon","Component","connect","state","login","startGame","payload","type","newQuestion","room","quizId","question","answers","lastQuestion","authenticateSocket","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","socket","response","wrap","_context","prev","next","fetch","method","sent","t0","abrupt","status","json","emit","stop","_x","apply","arguments","updateUserScore","_ref2","_callee2","score","_context2","headers","Content-Type","body","JSON","stringify","_x2","Game","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","history","push","io","onHostEvent","onJoinGame","onPlayerJoin","onPlayerLeave","onHostChange","onAlreadyInRoom","onNewHost","onGameStart","onNewQuestion","onQuestionDone","onGameFinish","componentWillUnmount","close","stopAllCountdownTimers","on","data","hostGame","username","quiz","name","questions","length","joinGame","players","host","playerJoin","playerLeave","newHost","hostChange","finishGame","scores","id","authenticateUserSocket","startingGame","questionNumber","startCountdownTimer","introQuestionTimer","setTimeout","startQuestionCountdownTimer","finishQuestionTimer","setState","questionDone","stopFinishQuestionTimer","getNewQuestion","countdownTimer","questionCountdownTimer","answered","informWaitingForMorePlayers","alert","answerQuestion","answer","nextQuestion","countdown","clearInterval","questionCountdown","clearTimeout","setInterval","questionTime","_this2","isStarting","isStarted","quizName","amountOfQuestions","isHost","Array","map","player","key","onClick","result","index","game","dispatch","then","res","quiz_id","socketId","withRouter","Leaderboard","componentDidMount","getLeaderboardInfo","doGetScores","scoreInfo","InputField","input","label","onChange","assign","placeholder","doSignUp","values","confirm","password","SignUpForm","handleSignUp","fields","signUpUserAsync","signUpUser","componentDidUpdate","_this$props","handleSubmit","isSubmitting","onSubmit","Field","component","disabled","signUp","loginError","errorMsg","React","reduxForm","form","SignUp","forms_SignUpForm","doLogout","console","log","checkLoggedInState","_ref3","_callee3","_context3","LoginForm","onLogin","loginUserAsync","user","registeredFields","Login","forms_LoginForm","QuizMakerInputField","QuizMaker","addAnswer","toConsumableArray","concat","answerCounter","canCreateQuestion","correctAnswer","addQuestion","reset","clearAnswerFields","answerError","createQuiz","questionCounter","doCreateQuiz","setCorrectAnswer","handleQuizNameChange","e","target","value","react_select_esm","options","answersWithId","answerValues","quizMaker","entries","sort","answerInfo","split","createdQuestions","keys","Routes","Switch","Route","exact","path","Header","isLoggedIn","logoutUser","getLoggedInUser","checkUserToken","style","borderWidth","borderColor","borderStyle","margin","borderRadius","userId","user_id","App","BrowserRouter","header_Header","Boolean","window","location","hostname","match","action","objectSpread","defineProperty","includes","playerIndex","indexOf","slice","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","RootReducer","applyMiddleware","ReduxThunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6b4e228.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/questionMark.380033f7.png\";","module.exports = __webpack_public_path__ + \"static/media/listIcon.50e9ff92.svg\";","import React, { Component } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  authenticateUserSocket,\r\n  hostGame,\r\n  joinGame,\r\n  playerJoin,\r\n  playerLeave,\r\n  hostChange,\r\n  newHost,\r\n  startingGame,\r\n  getNewQuestion,\r\n  finishGame\r\n} from \"../../actions/Game\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nlet currentRoom;\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // eslint-disable-next-line\r\n    let countdown = null;\r\n    // eslint-disable-next-line\r\n    let questionCountdown = null;\r\n    // eslint-disable-next-line\r\n    let introQuestionTimer = null;\r\n    // eslint-disable-next-line\r\n    let finishQuestionTimer = null;\r\n    this.state = {\r\n      countdownTimer: 3,\r\n      questionCountdownTimer: 10,\r\n      answered: false\r\n    };\r\n\r\n    this.socket = undefined;\r\n    currentRoom = null;\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    this.props.history.push(\"/game\");\r\n    this.socket = io(\"/games\");\r\n    this.authenticateSocket(this.socket);\r\n    this.onHostEvent();\r\n    this.onJoinGame();\r\n    this.onPlayerJoin();\r\n    this.onPlayerLeave();\r\n    this.onHostChange();\r\n    this.onAlreadyInRoom();\r\n    this.onNewHost();\r\n    this.onGameStart();\r\n    this.onNewQuestion();\r\n    this.onQuestionDone();\r\n    this.onGameFinish();\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.socket.close();\r\n    this.stopAllCountdownTimers();\r\n  };\r\n\r\n  onHostEvent = () => {\r\n    this.socket.on(\"hostJoin\", data => {\r\n      currentRoom = data.room;\r\n      this.props.hostGame(\r\n        data.room,\r\n        data.username,\r\n        true,\r\n        data.quiz.name,\r\n        data.quiz.questions.length\r\n      );\r\n    });\r\n  };\r\n\r\n  onJoinGame = () => {\r\n    this.socket.on(\"joinGame\", data => {\r\n      currentRoom = data.room;\r\n      this.props.joinGame(\r\n        data.room,\r\n        data.players,\r\n        data.host,\r\n        data.quiz.name,\r\n        data.quiz.questions.length\r\n      );\r\n    });\r\n  };\r\n\r\n  onPlayerJoin = () => {\r\n    this.socket.on(\"playerJoin\", data => {\r\n      this.props.playerJoin(data.room, data.username);\r\n    });\r\n  };\r\n\r\n  onPlayerLeave = () => {\r\n    \r\n    this.socket.on(\"playerLeave\", data => {\r\n      this.props.playerLeave(data.room, data.username);\r\n    });\r\n  };\r\n\r\n  onNewHost = () => {\r\n    this.socket.on(\"newHost\", data => {\r\n      this.props.newHost(data.room);\r\n    });\r\n  };\r\n\r\n  onHostChange = () => {\r\n    this.socket.on(\"hostChange\", data => {\r\n      this.props.hostChange(data.room, data.username);\r\n    });\r\n  };\r\n  \r\n  onAlreadyInRoom = () => {\r\n    this.socket.on(\"alreadyInRoom\", () => {\r\n      this.props.history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  onGameFinish = () => {\r\n    this.socket.on(\"gameFinish\", data => {\r\n      this.props.finishGame(\r\n        data.room,\r\n        data.players,\r\n        data.scores,\r\n        this.socket.id\r\n      );\r\n    });\r\n  };\r\n\r\n  authenticateSocket = socket => {\r\n    this.props.authenticateUserSocket(socket, this.props.history);\r\n  };\r\n\r\n  startGame = () => {\r\n    this.socket.emit(\"startGame\", currentRoom);\r\n  };\r\n\r\n  onGameStart = () => {\r\n    this.socket.on(\"startingGame\", data => {\r\n      this.props.history.push(\"/game/\" + data.room);\r\n      this.props.startingGame(data.room, data.quiz, data.questionNumber);\r\n      //TODO: Move the timers to server.\r\n      this.startCountdownTimer();\r\n      this.introQuestionTimer = setTimeout(() => {\r\n        this.startQuestionCountdownTimer(10);\r\n        this.finishQuestionTimer = setTimeout(() => {\r\n          this.setState({\r\n            questionDone: true\r\n          });\r\n        }, 10000);\r\n      }, 3000);\r\n    });\r\n  };\r\n\r\n  onNewQuestion = () => {\r\n    this.socket.on(\"newQuestion\", data => {\r\n      this.stopAllCountdownTimers();\r\n      this.stopFinishQuestionTimer();\r\n      this.props.getNewQuestion(data.room, data.quiz, data.questionNumber);\r\n\r\n      this.setState({\r\n        countdownTimer: 3,\r\n        questionCountdownTimer: 10,\r\n        answered: false,\r\n        questionDone: false\r\n      });\r\n\r\n      this.startCountdownTimer();\r\n      //TODO: Move the timers to server.\r\n      this.introQuestionTimer = setTimeout(() => {\r\n        this.startQuestionCountdownTimer(10);\r\n        this.finishQuestionTimer = setTimeout(() => {\r\n          this.setState({\r\n            questionDone: true\r\n          });\r\n        }, 10000);\r\n      }, 3000);\r\n    });\r\n  };\r\n\r\n  onQuestionDone = () => {\r\n    this.socket.on(\"questionDone\", () => {\r\n      this.setState({\r\n        questionDone: true\r\n      });\r\n    });\r\n  };\r\n\r\n  informWaitingForMorePlayers = () => {\r\n    alert(\"Waiting for more players\");\r\n  };\r\n\r\n  answerQuestion = answer => {\r\n    this.socket.emit(\"answerQuestion\", { room: currentRoom, answer });\r\n    this.setState({ answered: true });\r\n  };\r\n\r\n  nextQuestion = () => {\r\n    this.socket.emit(\"nextQuestion\", { room: currentRoom });\r\n  };\r\n\r\n  stopAllCountdownTimers = () => {\r\n    if (this.countdown !== null) {\r\n      clearInterval(this.countdown);\r\n    }\r\n    if (this.questionCountdown !== null) {\r\n      clearInterval(this.questionCountdown);\r\n    }\r\n  };\r\n\r\n  stopFinishQuestionTimer = () => {\r\n    if (this.finishQuestionTimer !== null) {\r\n      clearTimeout(this.finishQuestionTimer);\r\n    }\r\n    if (this.introQuestionTimer !== null) {\r\n      clearTimeout(this.introQuestionTimer);\r\n    }\r\n  };\r\n\r\n  startCountdownTimer = () => {\r\n    this.countdown = setInterval(() => {\r\n      this.setState(state => {\r\n        return { countdownTimer: state.countdownTimer - 1 };\r\n      });\r\n      if (this.state.countdownTimer === 0) clearInterval(this.countdown);\r\n    }, 1000);\r\n  };\r\n\r\n  startQuestionCountdownTimer = questionTime => {\r\n    this.setState({ questionCountdownTimer: questionTime });\r\n\r\n    this.questionCountdown = setInterval(() => {\r\n      this.setState(state => {\r\n        return { questionCountdownTimer: state.questionCountdownTimer - 1 };\r\n      });\r\n      if (this.state.questionCountdownTimer === 0){\r\n        clearInterval(this.questionCountdown);\r\n        this.answerQuestion(-1);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"gameContainer\">\r\n        {/* TODO: Move the entire container into it's own component */}\r\n        {!this.props.isStarting && !this.props.isStarted && (\r\n          <div className=\"gameInformationContainer\">\r\n            <div className=\"quizInformation\">\r\n              <h2 className=\"quizName\">{this.props.quizName || \"Quiz X\"}</h2>\r\n              <p className=\"quizQuestions\">\r\n                {this.props.amountOfQuestions\r\n                  ? this.props.amountOfQuestions + \" questions\"\r\n                  : \"I don't know how many questions there are.\"}\r\n              </p>\r\n              <p className=\"quizHost\">\r\n                Hosted by:{\" \"}\r\n                {(this.props.isHost ? \"YOU\" : \"\") ||\r\n                  (this.props.host ? this.props.host : \"Unknown\")}\r\n              </p>\r\n            </div>\r\n            <div className=\"playersContainer\">\r\n              {this.props.players && this.props.players instanceof Array ? (\r\n                this.props.players.map((player, key) => (\r\n                  <div key={key} className=\"player\">\r\n                    {player}\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                  <div className=\"player\">\r\n                    {this.props.players ? this.props.players : \"No players yet.\"}\r\n                  </div>\r\n                )}\r\n            </div>\r\n            <div className=\"buttonContainer\">\r\n              {this.props.isHost && (\r\n                <button\r\n                  className=\"quizButton startButton\"\r\n                  onClick={\r\n                    this.props.players instanceof Array &&\r\n                      this.props.players.length > 1\r\n                      ? this.startGame\r\n                      : this.informWaitingForMorePlayers\r\n                  }\r\n                >\r\n                  Start Game\r\n                </button>\r\n              )}\r\n              <Link to=\"/\"\r\n                className={\r\n                  this.props.isHost ? \"quizButton leaveButton\" : \"quizButton\"\r\n                }\r\n              >\r\n                Leave Game\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.props.isStarting && !this.props.isStarted && (\r\n          <div className=\"gameInformationContainer countdownContainer\">\r\n            <div className=\"countdownTimer\">{this.state.countdownTimer}</div>\r\n          </div>\r\n        )}\r\n        {!this.props.isStarting && this.props.isStarted && (\r\n          <div className=\"gameInformationContainer activeGameContainer\">\r\n            <div className=\"questionMainContainer\">\r\n              {!this.state.questionDone && (\r\n                <div className=\"questionContainer\">\r\n                  <div className=\"question\">{this.props.question}</div>\r\n                  <p className=\"questionCountdown\">\r\n                    {this.state.questionCountdownTimer}\r\n                  </p>\r\n                </div>\r\n              )}\r\n              <div className=\"answersContainer\">\r\n                {(!this.state.questionDone &&\r\n                  !this.state.answered &&\r\n                  this.props.answers.map((answer, key) => (\r\n                    <button\r\n                      key={key}\r\n                      className=\"answer\"\r\n                      onClick={() => {\r\n                        this.answerQuestion(key);\r\n                      }}\r\n                    >\r\n                      {answer}\r\n                    </button>\r\n                  ))) ||\r\n                  ((!this.state.questionDone && !this.props.lastQuestion && (\r\n                    <div className=\"answerWaiting\">\r\n                      Waiting for the other players\r\n                      <span>.</span>\r\n                      <span>.</span>\r\n                      <span>.</span>\r\n                    </div>\r\n                  )) ||\r\n                    (!this.props.isHost && !this.props.lastQuestion && (\r\n                      <div className=\"answerWaiting\">\r\n                        Waiting for the next question\r\n                        <span>.</span>\r\n                        <span>.</span>\r\n                        <span>.</span>\r\n                      </div>\r\n                    )))}\r\n                {this.props.isHost &&\r\n                  !this.props.lastQuestion &&\r\n                  this.state.questionDone && (\r\n                    <button\r\n                      onClick={this.nextQuestion}\r\n                      className=\"nextQuestionButton\"\r\n                    >\r\n                      Next Question\r\n                    </button>\r\n                  )}\r\n\r\n                {this.state.questionDone &&\r\n                  this.props.lastQuestion &&\r\n                  this.props.scores !== undefined && (\r\n                    <div className=\"resultContainer\">\r\n                      <h2>Scores</h2>\r\n                      <div className=\"winnerContainer\">Winner winner {this.props.scores ? this.props.scores[0][0] + \" with \" + this.props.scores[0][1]  : \"Unknown winner\"}</div>\r\n                      <table>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Rank</th>\r\n                            <th>Username</th>\r\n                            <th>Score</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {this.props.scores.map((result, index) => (\r\n                            <tr key={index}>\r\n                              <td>{index + 1}</td>\r\n                              <td>{result[0]}</td>\r\n                              <td>{result[1] ? result[1] : 0}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  )}\r\n\r\n                  {this.state.questionDone &&\r\n                  this.props.lastQuestion && (\r\n                    <Link to=\"/\" className=\"returnHomeButton\">Return to main menu</Link>\r\n                    )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    players: state.game[currentRoom]\r\n      ? state.game[currentRoom].players\r\n      : undefined,\r\n    isHost: state.game[currentRoom] ? state.game[currentRoom].isHost : false,\r\n    quizName: state.game[currentRoom]\r\n      ? state.game[currentRoom].quizName\r\n      : \"Unknown\",\r\n    amountOfQuestions: state.game[currentRoom]\r\n      ? state.game[currentRoom].amountOfQuestions\r\n      : 0,\r\n    host: state.game[currentRoom] ? state.game[currentRoom].host : undefined,\r\n    isStarting: state.game[currentRoom]\r\n      ? state.game[currentRoom].isStarting\r\n      : false,\r\n    isStarted: state.game[currentRoom]\r\n      ? state.game[currentRoom].isStarted\r\n      : false,\r\n    question: state.game[currentRoom]\r\n      ? state.game[currentRoom].question\r\n      : \"Missing Question\",\r\n    answers: state.game[currentRoom]\r\n      ? state.game[currentRoom].answers\r\n      : [\"I don't know.\"],\r\n    lastQuestion: state.game[currentRoom]\r\n      ? state.game[currentRoom].lastQuestion\r\n      : false,\r\n    scores: state.game[currentRoom] ? state.game[currentRoom].scores : []\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    authenticateUserSocket,\r\n    joinGame,\r\n    playerJoin,\r\n    playerLeave,\r\n    hostGame,\r\n    hostChange,\r\n    newHost,\r\n    startingGame,\r\n    getNewQuestion,\r\n    finishGame\r\n  }\r\n)(withRouter(Game));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport questionmark from \"./../../questionMark.png\";\r\nimport listIcon from \"./../../listIcon.svg\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"homeContainer\">\r\n        <div className=\"gameModeContainer\">\r\n          <div className=\"gamemodeChooser gameModeAuto\">\r\n            <div className=\"gameModeImageContainer\">\r\n              <img className=\"gameModeImage\" src={questionmark} alt=\"\" />\r\n            </div>\r\n            <p className=\"gameModeInfo\">Automatically join a game. </p>\r\n            <Link\r\n              to={\r\n                this.props.loggedIn === undefined || !this.props.loggedIn\r\n                  ? \"/login\"\r\n                  : \"/game\"\r\n              }\r\n              className=\"gamemodeButton\"\r\n            >\r\n              Auto\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"gamemodeChooser gameModeLobby\">\r\n            <div className=\"gameModeImageContainer\">\r\n              <img className=\"gameModeImage\" src={listIcon} alt=\"\" />\r\n            </div>\r\n            <p className=\"gameModeInfo\">\r\n              Go check out the scores!\r\n              <br /> Have your friends played?\r\n            </p>\r\n            <Link to={\"/leaderboard\"} className=\"gamemodeButton\">\r\n              Leaderboard\r\n            </Link>\r\n          </div>\r\n        <div className=\"quizMakerPageContainer\">\r\n            <p className=\"quizMakerInfo\">\r\n                Create your own quiz!\r\n            </p>\r\n            <Link to={\"/quizMaker\"} className=\"quizMakerButton\">\r\n              Quiz Maker\r\n            </Link>\r\n          </div>\r\n      </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedIn: state.login.loggedIn\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import {\r\n  AUTH_USER_SOCKET,\r\n  START_GAME,\r\n  LOGIN_ERROR,\r\n  JOIN_GAME,\r\n  PLAYER_JOIN,\r\n  HOST_GAME,\r\n  PLAYER_LEAVE,\r\n  NEW_HOST,\r\n  HOST_CHANGE,\r\n  GAME_STARTING,\r\n  GAME_STARTED,\r\n  NEXT_QUESTION,\r\n  LAST_QUESTION,\r\n  GAME_SCORES\r\n} from \"../actionTypes\";\r\n\r\nexport const authUserSocket = () => ({\r\n  type: AUTH_USER_SOCKET\r\n});\r\n\r\nexport const startGame = payload => ({\r\n  type: START_GAME,\r\n  payload\r\n});\r\n\r\nexport const hostGame = (\r\n  room,\r\n  username,\r\n  isHost,\r\n  quizName,\r\n  amountOfQuestions\r\n) => ({\r\n  type: HOST_GAME,\r\n  room,\r\n  username,\r\n  isHost,\r\n  quizName,\r\n  amountOfQuestions\r\n});\r\n\r\nexport const joinGame = (room, players, host, quizName, amountOfQuestions) => ({\r\n  type: JOIN_GAME,\r\n  room,\r\n  players,\r\n  host,\r\n  quizName,\r\n  amountOfQuestions\r\n});\r\n\r\nexport const playerJoin = (room, username) => ({\r\n  type: PLAYER_JOIN,\r\n  room,\r\n  username\r\n});\r\n\r\nexport const playerLeave = (room, username) => ({\r\n  type: PLAYER_LEAVE,\r\n  room,\r\n  username\r\n});\r\n\r\nexport const newHost = room => ({\r\n  type: NEW_HOST,\r\n  room\r\n});\r\n\r\nexport const hostChange = (room, username) => ({\r\n  type: HOST_CHANGE,\r\n  room,\r\n  username\r\n});\r\n\r\nconst newQuestion = (room, quizId, question, answers) => ({\r\n  type: NEXT_QUESTION,\r\n  room,\r\n  quizId,\r\n  question,\r\n  answers\r\n});\r\n\r\nconst lastQuestion = (room, quizId, question, answers) => ({\r\n  type: LAST_QUESTION,\r\n  room,\r\n  quizId,\r\n  question,\r\n  answers,\r\n  lastQuestion: true\r\n});\r\n\r\nexport const finishGame = (room, players, scores, socketId) => {\r\n  return dispatch => {\r\n    dispatch({ type: GAME_SCORES, room, scores });\r\n    updateUserScore(players[socketId])\r\n  };\r\n};\r\n\r\nexport const startingGame = (room, quiz, questionNumber) => {\r\n  return dispatch => {\r\n    if (quiz.questions.length - 1 === questionNumber) {\r\n      dispatch(\r\n        lastQuestion(\r\n          room,\r\n          quiz.quiz_id,\r\n          quiz.questions[questionNumber].question,\r\n          quiz.questions[questionNumber].answers\r\n        )\r\n      );\r\n    } else {\r\n      dispatch(\r\n        newQuestion(\r\n          room,\r\n          quiz.quiz_id,\r\n          quiz.questions[questionNumber].question,\r\n          quiz.questions[questionNumber].answers\r\n        )\r\n      );\r\n    }\r\n    setTimeout(() => {\r\n      dispatch({ type: GAME_STARTED, room });\r\n    }, 3000);\r\n  };\r\n};\r\n\r\nexport const getNewQuestion = (room, quiz, questionNumber) => {\r\n  return dispatch => {\r\n    if (quiz.questions.length - 1 === questionNumber) {\r\n      dispatch(\r\n        lastQuestion(\r\n          room,\r\n          quiz.quiz_id,\r\n          quiz.questions[questionNumber].question,\r\n          quiz.questions[questionNumber].answers\r\n        )\r\n      );\r\n    } else {\r\n      dispatch(\r\n        newQuestion(\r\n          room,\r\n          quiz.quiz_id,\r\n          quiz.questions[questionNumber].question,\r\n          quiz.questions[questionNumber].answers\r\n        )\r\n      );\r\n    }\r\n    setTimeout(() => {\r\n      dispatch({ type: GAME_STARTED, room });\r\n    }, 3000);\r\n  };\r\n};\r\n\r\nexport const authenticateUserSocket = (socket, history) => {\r\n  return dispatch => {\r\n    authenticateSocket(socket).then(res => {\r\n      if (res.status === 201) {\r\n        dispatch(authUserSocket());\r\n        dispatch(startGame);\r\n      } else {\r\n        history.push(\"/login\");\r\n        dispatch({ type: LOGIN_ERROR });\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\n/**\r\n * @author arcuri82\r\n * Code from course material in PG6300, by lecturer Andrea Arcuri.\r\n */\r\nconst authenticateSocket = async socket => {\r\n  const url = \"/api/wstoken\";\r\n\r\n  let response;\r\n\r\n  try {\r\n    response = await fetch(url, {\r\n      method: \"post\"\r\n    });\r\n  } catch (err) {\r\n    return \"Failed to connect to server: \" + err;\r\n  }\r\n\r\n  if (response.status === 401) {\r\n    return \"You need to login first.\";\r\n  }\r\n\r\n  if (response.status !== 201) {\r\n    return \"Error when connecting to server: status code \" + response.status;\r\n  }\r\n\r\n  const payload = await response.json();\r\n\r\n  socket.emit(\"login\", payload);\r\n  return response;\r\n};\r\n\r\nconst updateUserScore = async score => {\r\n  const url = \"/api/updateScore\";\r\n  let response;\r\n  try {\r\n    response = await fetch(url, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ score: score })\r\n    });\r\n  } catch (err) {\r\n    return \"Failed to connect to server: \" + err;\r\n  }\r\n  return response;\r\n};\r\n","export const INCREASE_GAMES_PLAYED = \"INCREASE_GAMES_PLAYED\";\r\nexport const SET_HIGHSCORE = \"SET_HIGHSCORE\";\r\nexport const LOGIN_USER = \"LOGIN_USER\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGGED_IN_USER = \"LOGGED_IN_USER\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const UPDATE_LOGIN_STATUS = \"UPDATE_LOGIN_STATUS\";\r\nexport const SIGN_UP_USER = \"SIGN_UP_USER\";\r\nexport const SIGN_UP_ERROR = \"SIGN_UP_ERROR\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const AUTH_USER_SOCKET = \"AUTH_USER_SOCKET\";\r\nexport const AUTH_USER_SOCKET_ERROR = \"AUTH_USER_SOCKET_ERROR\";\r\nexport const START_GAME = \"START_GAME\";\r\nexport const HOST_GAME = \"HOST_GAME\";\r\nexport const JOIN_GAME = \"JOIN_GAME\";\r\nexport const PLAYER_JOIN = \"PLAYER_JOIN\";\r\nexport const PLAYER_LEAVE = \"PLAYER_LEAVE\";\r\nexport const NEW_HOST = \"NEW_HOST\";\r\nexport const HOST_CHANGE = \"HOST_CHANGE\";\r\nexport const GAME_STARTING = \"GAME_STARTING\";\r\nexport const GAME_STARTED = \"GAME_STARTED\";\r\nexport const NEXT_QUESTION = \"NEXT_QUESTION\";\r\nexport const LAST_QUESTION = \"LAST_QUESTION\";\r\nexport const FINISH_GAME = \"FINISH_GAME\";\r\nexport const GAME_SCORES = \"GAME_SCORES\";","import React, { Component } from \"react\";\r\n\r\nexport default class Leaderboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      scores: []\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getLeaderboardInfo();\r\n  };\r\n\r\n  doGetScores = async () => {\r\n    const url = \"/api/scores\";\r\n    let response;\r\n    try {\r\n      response = await fetch(url, {\r\n        method: \"get\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n    } catch (err) {\r\n      return;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  getLeaderboardInfo = () => {\r\n    return this.doGetScores().then(res => {\r\n      if (res.status === 200) {\r\n        res.json().then(body => {\r\n          this.setState({ scores: body });\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"leaderboardContainer\">\r\n        <h2 className=\"leaderboardHeader\">Leaderboard - Top 25 Worldwide</h2>\r\n        <div className=\"leaderboard\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Rank</th>\r\n                <th>Username</th>\r\n                <th>Score</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.scores.map((scoreInfo, index) => (\r\n                <tr className={index % 2 === 0 ? \"even\" : \"odd\"} key={index}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{scoreInfo.username}</td>\r\n                  <td>{scoreInfo.score}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { string, object } from 'prop-types'\r\nimport React from \"react\";\r\n\r\nexport default function InputField({ input, label, type, onChange }) {\r\n  return (\r\n    <div>\r\n      <div className=\"inputContainer\">\r\n      {onChange ? \r\n        <input {...input} type={type} placeholder={label} onChange={onChange ? onChange : undefined}/> :\r\n        <input {...input} type={type} placeholder={label}/>\r\n\r\n      }\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nInputField.propTypes = {\r\n    input: object,\r\n    label: string,\r\n    type: string\r\n}","import { SIGN_UP_USER, SIGN_UP_ERROR, SIGN_UP_SUCCESS, LOGIN_SUCCESS } from \"../actionTypes\";\r\n\r\nexport const signUpUser = () => ({\r\n  type: SIGN_UP_USER\r\n});\r\n\r\nexport const signUpUserAsync = (payload, history) => {\r\n  return dispatch => {\r\n    doSignUp(payload).then(res => {\r\n      if (res.status === 200) {\r\n        res.json().then(body => {\r\n          history.push(\"/\");\r\n          dispatch({ type: LOGIN_SUCCESS, payload: body });\r\n          dispatch({ type: SIGN_UP_SUCCESS });\r\n          return;\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: SIGN_UP_ERROR,\r\n          payload: {\r\n            errorMsg: res\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nconst doSignUp = async values => {\r\n  if (values.confirm !== values.password) {\r\n    return \"Passwords do not match.\";\r\n  }\r\n\r\n  const url = \"/api/signup\";\r\n  const payload = { username: values.username, password: values.password };\r\n\r\n  let response;\r\n\r\n  try {\r\n    response = await fetch(url, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(payload)\r\n    });\r\n  } catch (err) {\r\n    return \"Failed to connect to server\";\r\n  }\r\n\r\n  if (response.status === 400) {\r\n    return \"Invalid username/password\";\r\n  }\r\n\r\n  if (response.status !== 200) {\r\n    return \"Failed to connect to server\";\r\n  }\r\n  return response;\r\n};\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport InputField from \"../components/inputField/InputField\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUpUser, signUpUserAsync } from \"../actions/SignUp\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n/**\r\n * Inspired by Redux-Form examples - https://redux-form.com/7.4.2/examples/asyncvalidation/\r\n */\r\n\r\nclass SignUpForm extends React.Component {\r\n  handleSignUp = fields => {\r\n    this.props.signUpUserAsync(fields, this.props.history);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.props.signUpUser();\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    if(this.props.loggedIn) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit, isSubmitting } = this.props;\r\n    return (\r\n      <div>\r\n        <form onSubmit={handleSubmit(this.handleSignUp)}>\r\n          <Field\r\n            name=\"username\"\r\n            type=\"text\"\r\n            component={InputField}\r\n            label=\"Username\"\r\n          />\r\n          <Field\r\n            name=\"password\"\r\n            type=\"password\"\r\n            component={InputField}\r\n            label=\"Password\"\r\n          />\r\n          <Field\r\n            name=\"confirm\"\r\n            type=\"password\"\r\n            component={InputField}\r\n            label=\"Repeat password\"\r\n          />\r\n          <div className=\"signUpButtonContainer\">\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Sign up\r\n            </button>\r\n          </div>\r\n        </form>\r\n        {this.props.signUp.loginError &&\r\n          <div className=\"errorBox\">{this.props.signUp.errorMsg}</div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.login ?  state.login.loggedIn : false,\r\n    signUp: state.signUp\r\n  };\r\n}\r\n\r\nexport default reduxForm({\r\n  form: \"signup\"\r\n})(\r\n  connect(\r\n    mapStateToProps,\r\n    { signUpUser, signUpUserAsync }\r\n  )(withRouter(SignUpForm))\r\n);\r\n","import React, { Component } from \"react\";\r\nimport SignUpForm from \"../../forms/SignUpForm\";\r\n\r\nexport default class SignUp extends Component {\r\n \r\n  render() {\r\n    return (\r\n      <div className=\"signUpContainer\">\r\n        <div className=\"signUpFormContainer\">\r\n          <span>SIGN UP</span>\r\n          <SignUpForm />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import {\r\n  LOGIN_USER,\r\n  LOGGED_IN_USER,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n  LOGOUT_SUCCESS,\r\n  UPDATE_LOGIN_STATUS\r\n} from \"../actionTypes\";\r\n\r\nexport const loginUser = () => ({\r\n  type: LOGIN_USER\r\n});\r\n\r\nexport const loginSuccess = user => ({\r\n  type: LOGIN_SUCCESS,\r\n  user\r\n});\r\n\r\nexport const loggedInUser = payload => ({\r\n  type: LOGGED_IN_USER,\r\n  payload\r\n});\r\n\r\nexport const loginError = payload => ({\r\n  type: LOGIN_ERROR,\r\n  payload\r\n});\r\n\r\nexport const logoutSuccess = () => ({\r\n  type: LOGOUT_SUCCESS\r\n});\r\n\r\nexport const loginUserAsync = (payload, history) => {\r\n  return dispatch => {\r\n    dispatch({ type: LOGIN_USER });\r\n\r\n    login(payload).then(res => {\r\n      if (res.status === 200) {\r\n        res.json().then(body => {\r\n          history.push(\"/\");\r\n          dispatch({ type: LOGIN_SUCCESS, payload: body });\r\n        });\r\n      } else {\r\n        dispatch({ type: LOGIN_ERROR, payload: {} });\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const logoutUser = history => {\r\n  return dispatch => {\r\n    doLogout().then(res => {\r\n      if (res === 204) {\r\n        history.push(\"/\");\r\n        dispatch({ type: LOGOUT_SUCCESS });\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const checkUserToken = () => {\r\n  return dispatch => {\r\n    return checkLoggedInState().then(res => {\r\n      if (res === 401) {\r\n        dispatch({ type: UPDATE_LOGIN_STATUS, payload: { user: undefined } });\r\n        return;\r\n      }\r\n      if (res.status === 200) {\r\n        res.json().then(body => {\r\n          dispatch({ type: UPDATE_LOGIN_STATUS, payload: { user: body } });\r\n          return true;\r\n        });\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nconst doLogout = async () => {\r\n  const url = \"/api/logout\";\r\n\r\n  let response;\r\n\r\n  try {\r\n    response = await fetch(url, { method: \"post\" });\r\n  } catch (err) {\r\n    console.log(\"Issues logging out user.\");\r\n    return 500;\r\n  }\r\n\r\n  return response.status;\r\n};\r\n\r\nconst login = async values => {\r\n  const url = \"/api/login\";\r\n  const payload = { username: values.username, password: values.password };\r\n  let response;\r\n  try {\r\n    response = await fetch(url, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(payload)\r\n    });\r\n  } catch (err) {\r\n    return;\r\n  }\r\n\r\n  return response;\r\n};\r\n\r\nconst checkLoggedInState = async () => {\r\n  const url = \"/api/user\";\r\n  let response;\r\n  try {\r\n    response = await fetch(url, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n  } catch (err) {\r\n    return;\r\n  }\r\n\r\n  return response;\r\n};\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport InputField from \"../components/inputField/InputField\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUserAsync } from \"../actions/Login\";\r\nimport { withRouter } from \"react-router-dom\";\r\n/**\r\n * Inspired by Redux-Form examples - https://redux-form.com/7.4.2/examples/asyncvalidation/\r\n */\r\n\r\nclass LoginForm extends React.Component {\r\n  onLogin = fields => {\r\n    this.props.loginUserAsync(fields, this.props.history);\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    if (this.props.loggedIn) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit, isSubmitting } = this.props;\r\n    return (\r\n      <div>\r\n        <form onSubmit={handleSubmit(this.onLogin)}>\r\n          <Field\r\n            name=\"username\"\r\n            type=\"text\"\r\n            component={InputField}\r\n            label=\"Username\"\r\n          />\r\n          <Field\r\n            name=\"password\"\r\n            type=\"password\"\r\n            component={InputField}\r\n            label=\"Password\"\r\n          />\r\n          <div className=\"loginButtonContainer\">\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Log in\r\n            </button>\r\n          </div>\r\n        </form>\r\n        {this.props.loginError && (\r\n          <div className=\"errorBox\">Unable to log in</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst formName = \"login\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedIn: state.login ? state.login.loggedIn : false,\r\n    user: state.form[formName]\r\n      ? state.form[formName].registeredFields\r\n      : undefined,\r\n      loginError: state.login ? state.login.loginError : undefined\r\n  };\r\n};\r\n\r\nexport default reduxForm({\r\n  form: formName\r\n})(\r\n  connect(\r\n    mapStateToProps,\r\n    { loginUserAsync }\r\n  )(withRouter(LoginForm))\r\n);\r\n","import React, { Component } from \"react\";\r\nimport LoginForm from \"../../forms/LoginForm\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"loginContainer\">\r\n        <div className=\"loginFormContainer\">\r\n          <span>LOG IN</span>\r\n          <LoginForm />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default connect()(withRouter(Login))\r\n","import { string, object } from 'prop-types'\r\nimport React from \"react\";\r\nimport InputField from './../inputField/InputField'\r\n\r\nexport default function QuizMakerInputField({ input, label, type }) {\r\n  return (\r\n    <div className=\"quizMakerInputFieldContainer\">\r\n      <label>{label}</label>\r\n      <InputField label={label} input={input} type={type}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nQuizMakerInputField.propTypes = {\r\n    input: object,\r\n    label: string,\r\n    type: string\r\n}","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport QuizMakerInputField from \"../../components/quizMakerInputField/QuizMakerInputField\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\nimport Select from \"react-select\";\r\nimport InputField from \"../../components/inputField/InputField\";\r\n\r\nclass QuizMaker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      answerCounter: 0,\r\n      questionCounter: 0,\r\n      answers: [],\r\n      questions: [],\r\n      quizName: \"\"\r\n    };\r\n  }\r\n\r\n  addAnswer = () => {\r\n    this.setState(state => ({\r\n      answers: [...state.answers].concat(\r\n        <Field\r\n          name={\"answer-\" + state.answerCounter}\r\n          type=\"text\"\r\n          component={QuizMakerInputField}\r\n          label={\"Answer \" + (state.answerCounter + 1)}\r\n          key={state.answerCounter}\r\n          id={state.answerCounter}\r\n        />\r\n      ),\r\n      answerCounter: state.answerCounter + 1\r\n    }));\r\n  };\r\n\r\n  canCreateQuestion = state => {\r\n    return (\r\n      this.props.question !== undefined &&\r\n      state.answerCounter > 0 &&\r\n      this.state.correctAnswer\r\n    );\r\n  };\r\n\r\n  addQuestion = () => {\r\n    const { dispatch } = this.props;\r\n    if (this.state.correctAnswer && this.props.question && this.state.quizName) {\r\n      this.setState(\r\n        state => {\r\n          if (this.canCreateQuestion(state)) {\r\n            return {\r\n              questions: [...state.questions].concat({\r\n                question: this.props.question,\r\n                answers: this.props.answers,\r\n                correctAnswer: state.correctAnswer\r\n              })\r\n            };\r\n          }\r\n        },\r\n        () => {\r\n          dispatch(reset(\"quizMaker\"));\r\n          this.clearAnswerFields();\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        answerError:\r\n          \"To create a new question, you need to write a question, supply the answers and choose the correct one.\"\r\n      });\r\n    }\r\n  };\r\n\r\n  createQuiz = () => {\r\n    if (this.state.questionCounter > 0 && this.state.quizName) {\r\n      this.doCreateQuiz().then(() => {\r\n        this.setState({\r\n          questionCounter: 0,\r\n          answerCounter: 0,\r\n          answers: [],\r\n          answerError: \"\",\r\n          correctAnswer: null\r\n        });\r\n        this.props.history.push(\"/\");\r\n      });\r\n    };\r\n  };\r\n\r\n  clearAnswerFields = () => {\r\n    this.setState(state => {\r\n      return {\r\n        answers: [],\r\n        answerCounter: 0,\r\n        correctAnswer: null,\r\n        questionCounter: state.questionCounter + 1,\r\n        answerError: \"\"\r\n      };\r\n    });\r\n  };\r\n\r\n  setCorrectAnswer = index => {\r\n    this.setState({\r\n      correctAnswer: index,\r\n      answerError: \"\"\r\n    });\r\n  };\r\n\r\n  doCreateQuiz = async () => {\r\n    const url = \"/api/quiz\";\r\n    let response;\r\n    const payload = {\r\n      quizName: this.state.quizName,\r\n      questions: this.state.questions\r\n    };\r\n    try {\r\n      response = await fetch(url, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n    } catch (err) {\r\n      return \"Failed to connect to server\";\r\n    }\r\n    return response;\r\n  };\r\n\r\n  handleQuizNameChange = (e) => {\r\n    this.setState({ quizName: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit, isSubmitting } = this.props;\r\n    return (\r\n      <div className=\"quizMakerContainer\">\r\n        <h2>Quiz Maker</h2>\r\n        <InputField\r\n          name=\"quizName\"\r\n          value={this.state.quizName}\r\n          type=\"text\"\r\n          label=\"Quiz Name\"\r\n          onChange={this.handleQuizNameChange}\r\n        />\r\n\r\n        <form onSubmit={handleSubmit(this.createQuiz)}>\r\n          <Field\r\n            name=\"question\"\r\n            type=\"text\"\r\n            component={QuizMakerInputField}\r\n            label=\"Question\"\r\n          />\r\n\r\n          <div className=\"quizMakerQuestionContainer\">\r\n            {this.state.answers.map(answer => {\r\n              return answer;\r\n            })}\r\n          </div>\r\n\r\n          <label>Correct answer</label>\r\n          <Select\r\n            onChange={e => this.setCorrectAnswer(e.value)}\r\n            className=\"selectAnswer\"\r\n            options={this.props.answersWithId.map(answer => {\r\n              return {\r\n                value: answer.id,\r\n                label: answer.answer\r\n              };\r\n            })}\r\n          />\r\n          {this.state.answers.length < 10 &&\r\n            this.props.answers.length === this.state.answerCounter && (\r\n              <div className=\"addItemQuizButtonContainer\">\r\n                <button type=\"button\" onClick={() => this.addAnswer()}>\r\n                  Add answer\r\n                </button>\r\n\r\n              </div>\r\n            )}\r\n\r\n          {this.state.questions.length < 10 &&\r\n            this.props.answers.length === this.state.answerCounter && (\r\n\r\n              <div className=\"addItemQuizButtonContainer\">\r\n                <button type=\"button\" onClick={this.addQuestion}>\r\n                  Add question\r\n            </button>\r\n              </div>\r\n            )\r\n          }\r\n          {this.props.answers.length === this.state.answerCounter && (\r\n            <div className=\"createQuizButtonContainer\">\r\n              <p>Questions: {this.state.questionCounter + \"/10\"} </p>\r\n\r\n              <button type=\"submit\" disabled={isSubmitting}>\r\n                Finish Quiz\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {this.props.answers.length !== this.state.answerCounter && (\r\n            <div>\r\n              <p className=\"questionError\">You need to fill in all answers</p>\r\n            </div>\r\n          )}\r\n\r\n          {this.state.answerError !== \"\" && (\r\n            <div>\r\n              <p className=\"questionError\">{this.state.answerError}</p>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst getAnswerInformation = answerName => {\r\n  return answerName.split(\"-\");\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  let answersWithId = [];\r\n  let answerValues = [];\r\n  let question = undefined;\r\n  if (state.form.quizMaker && state.form.quizMaker.values) {\r\n    Object.entries(state.form.quizMaker.values)\r\n      .sort()\r\n      .map(answer => {\r\n        const answerInfo = getAnswerInformation(answer[0]);\r\n        if (answerInfo[0] === \"answer\") {\r\n          answersWithId.push({ id: answerInfo[1], answer: answer[1] });\r\n          answerValues.push(answer[1]);\r\n        }\r\n      });\r\n    question =\r\n      Object.values(state.form.quizMaker.values) &&\r\n        Object.values(state.form.quizMaker.values).length > 1\r\n        ? Object.values(state.form.quizMaker.values)[0]\r\n        : undefined;\r\n  }\r\n  return {\r\n    answers: answerValues,\r\n    answersWithId: answersWithId,\r\n    createdQuestions: state.form.quizMaker\r\n      ? Object.keys(state.form.quizMaker.registeredFields).length - 1\r\n      : -1,\r\n    question: question !== undefined ? question : undefined\r\n  };\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"quizMaker\"\r\n})(\r\n  connect(\r\n    mapStateToProps,\r\n    {}\r\n  )(withRouter(QuizMaker))\r\n);\r\n","import React from \"react\";\r\nimport Home from \"../home/Home\";\r\nimport Game from \"../game/Game\";\r\nimport Leaderboard from \"../leaderboard/Leaderboard\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport SignUp from \"../signUp/SignUp\";\r\nimport Login from \"../login/Login\";\r\nimport QuizMaker from \"../quizMaker/QuizMaker\";\r\n\r\nexport default function Routes({ loggedIn }) {\r\n  return (\r\n    <Switch>\r\n      {(loggedIn === undefined || !loggedIn) && (\r\n        <Route exact path=\"/signup\" component={SignUp} />\r\n      )}\r\n      {(loggedIn === undefined || !loggedIn) && (\r\n        <Route exact path=\"/login\" component={Login} />\r\n      )}\r\n      <Route exact path=\"/game\" component={Game} />\r\n      <Route exact path=\"/leaderboard\" component={Leaderboard} />\r\n      <Route exact path=\"/quizmaker\" component={QuizMaker} />\r\n      <Route exact path=\"/home\" component={Home} />\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/game\" component={Game} />\r\n      <Route path=\"/\" component={Home} />\r\n    </Switch>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { logoutUser, checkUserToken } from \"../../actions/Login\";\r\n\r\nclass Header extends Component {\r\n  isLoggedIn = () => {\r\n    return this.props.loggedIn !== undefined && this.props.loggedIn === true;\r\n  };\r\n\r\n  doLogout = () => {\r\n    this.props.logoutUser(this.props.history);\r\n  }\r\n\r\n  getLoggedInUser = () => {\r\n    this.props.checkUserToken();\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    this.getLoggedInUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"headerContainer\">\r\n        <Link to=\"/\" className=\"headerLink headerLogo\">\r\n          Quhoot\r\n        </Link>\r\n\r\n        <div className=\"headerNavigationContainer\">\r\n          <Link to=\"/quizmaker\" className=\"headerLink\">\r\n            Quizmaker\r\n          </Link>\r\n\r\n          <Link to=\"/Leaderboard\" className=\"headerLink\">\r\n            Leaderboard\r\n          </Link>\r\n\r\n          {!this.isLoggedIn() && (\r\n            <Link to=\"/login\" className=\"headerLink headerLogin\">\r\n              Log In\r\n            </Link>\r\n          )}\r\n          {!this.isLoggedIn() && (\r\n            <Link to=\"/signup\" className=\"headerLink headerSignUp\">\r\n              Sign Up\r\n            </Link>\r\n          )}\r\n\r\n          {this.isLoggedIn() && (\r\n            <div className=\"headerLink\" style={{borderWidth: \"1px\", borderColor: \"black\", borderStyle: \"solid\", margin: \"1em\" , borderRadius: \".1em\"}}>{\"USER - \" + this.props.username}</div>\r\n          )}\r\n\r\n          {this.isLoggedIn() && (\r\n            <button onClick={this.doLogout} className=\"headerLink headerSignUp\">\r\n              Log out\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.login.loggedIn,\r\n    userId: state.login.user ? state.login.user.user_id : undefined,\r\n    username: state.login.user ? state.login.user.username : undefined\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser,\r\n    checkUserToken }\r\n)(withRouter(Header));\r\n","import React, { Component } from \"react\";\nimport \"./scss/App.scss\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"./containers/routes/Routes\";\nimport Header from \"./containers/header/Header\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Header />\n          <Routes loggedIn={this.props.loggedIn}/>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedIn: state.login ?  state.login.loggedIn : false,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  LOGIN_USER,\r\n  LOGIN_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  UPDATE_LOGIN_STATUS\r\n} from \"../actionTypes\";\r\n\r\nconst login = (state = [], action) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      return { ...state, loginError: false };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        user: {\r\n          userId: action.payload.user_id,\r\n          username: action.payload.username\r\n        }\r\n      };\r\n    case LOGIN_ERROR:\r\n      return { ...state, loggedIn: false, loginError: true };\r\n    case LOGOUT_SUCCESS:\r\n      return { ...state, loggedIn: false };\r\n    case UPDATE_LOGIN_STATUS:\r\n      const loggedIn = action.payload.user !== undefined ? true : false;\r\n      const user = action.payload.user !== undefined ? action.payload.user : undefined;\r\n\r\n        return {\r\n          ...state,\r\n          loggedIn: loggedIn,\r\n          user: user\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default login;\r\n","import { SIGN_UP_ERROR, SIGN_UP_SUCCESS, SIGN_UP_USER } from \"../actionTypes\";\r\n\r\nconst signUp = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SIGN_UP_USER:\r\n      return {\r\n        ...state,\r\n        loginError: false,\r\n        errorMsg: undefined\r\n      };\r\n    case SIGN_UP_ERROR:\r\n      return {\r\n        ...state,\r\n        loginError: true,\r\n        errorMsg: action.payload ? action.payload.errorMsg : undefined\r\n      };\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loginError: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default signUp;\r\n","import {\r\n  AUTH_USER_SOCKET,\r\n  AUTH_USER_SOCKET_ERROR,\r\n  START_GAME,\r\n  JOIN_GAME,\r\n  PLAYER_JOIN,\r\n  PLAYER_LEAVE,\r\n  HOST_GAME,\r\n  HOST_CHANGE,\r\n  NEW_HOST,\r\n  GAME_STARTING,\r\n  GAME_STARTED,\r\n  NEXT_QUESTION,\r\n  LAST_QUESTION,\r\n  GAME_SCORES\r\n} from \"../actionTypes\";\r\n\r\nconst game = (state = [], action) => {\r\n  switch (action.type) {\r\n    case AUTH_USER_SOCKET:\r\n      return { ...state, loginError: false };\r\n    case AUTH_USER_SOCKET_ERROR:\r\n      return { ...state, loginError: true, errorMsg: action.payload };\r\n    case START_GAME:\r\n      return {\r\n        ...state,\r\n        loginError: false,\r\n        errorMsg: \"TRYING TO START THE GAME\"\r\n      };\r\n    case HOST_GAME:\r\n      return {\r\n        ...state,\r\n        [action.room]: {\r\n          players:\r\n            state.players && state.players.length > 0\r\n              ? [...state[action.room].players, action.username]\r\n              : action.username,\r\n          isHost: action.isHost,\r\n          host: action.username,\r\n          quizName: action.quizName,\r\n          amountOfQuestions: action.amountOfQuestions\r\n        }\r\n      };\r\n    case JOIN_GAME:\r\n      return {\r\n        ...state,\r\n        [action.room]: {\r\n          players: action.players,\r\n          host: action.host,\r\n          quizName: action.quizName,\r\n          amountOfQuestions: action.amountOfQuestions\r\n        }\r\n      };\r\n    case PLAYER_JOIN:\r\n      if (!state[action.room].players.includes(action.username)) {\r\n        return {\r\n          ...state,\r\n          [action.room]: {\r\n            ...state[action.room],\r\n            players:\r\n              state[action.room].players instanceof Array\r\n                ? [...state[action.room].players, action.username]\r\n                : [state[action.room].players, action.username]\r\n          }\r\n        };\r\n      }\r\n      return state;\r\n\r\n    case PLAYER_LEAVE:\r\n      let playerIndex = state[action.room].players.indexOf(action.username);\r\n      /**\r\n       * Source for removing with spread operator to keep immutability.\r\n       * https://til.hashrocket.com/posts/ae2aa38f6a-immutable-remove-with-the-spread-operator\r\n       */\r\n      return {\r\n        ...state,\r\n        [action.room]: {\r\n          ...state[action.room],\r\n          players: [\r\n            ...state[action.room].players.slice(0, playerIndex),\r\n            ...state[action.room].players.slice(\r\n              playerIndex + 1,\r\n              playerIndex.length\r\n            )\r\n          ]\r\n        }\r\n      };\r\n    case HOST_CHANGE:\r\n      return {\r\n        ...state,\r\n        [action.room]: {\r\n          ...state[action.room],\r\n          host: action.username\r\n        }\r\n      };\r\n    case NEW_HOST:\r\n      return {\r\n        ...state,\r\n        [action.room]: {\r\n          ...state[action.room],\r\n          isHost: true\r\n        }\r\n      };\r\n    case GAME_STARTING:\r\n      return {\r\n        ...state,\r\n        [action.room]: {\r\n          ...state[action.room],\r\n          isStarting: true,\r\n          question: action.question,\r\n          answers: action.answers\r\n        }\r\n      };\r\n    case GAME_STARTED:\r\n\r\n      return {\r\n        ...state,\r\n        [action.room]: {\r\n          ...state[action.room],\r\n          isStarting: false,\r\n          isStarted: true\r\n        }\r\n      };\r\n    case NEXT_QUESTION:\r\n\r\n      return {\r\n        ...state,\r\n        [action.room]: {\r\n          ...state[action.room],\r\n          question: action.question,\r\n          answers: action.answers,\r\n          isStarting: true,\r\n          isStarted: false\r\n        }\r\n      };\r\n    case LAST_QUESTION:\r\n\r\n      return {\r\n        ...state,\r\n        [action.room]: {\r\n          ...state[action.room],\r\n          question: action.question,\r\n          answers: action.answers,\r\n          isStarting: true,\r\n          isStarted: false,\r\n          lastQuestion: action.lastQuestion\r\n        }\r\n      };\r\n    case GAME_SCORES:\r\n\r\n      return {\r\n        ...state,\r\n        [action.room]: {\r\n          ...state[action.room],\r\n          scores: action.scores\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default game;\r\n","import { combineReducers } from \"redux\"\r\nimport login from './Login'\r\nimport signUp from './SignUp'\r\nimport game from './Game'\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nexport default combineReducers({\r\n    login,\r\n    signUp,\r\n    game,\r\n    form: formReducer,\r\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport RootReducer from \"./reducers/RootReducer\"\nimport ReduxThunk from 'redux-thunk'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  RootReducer,\n  composeEnhancers(applyMiddleware(ReduxThunk\n    ))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}